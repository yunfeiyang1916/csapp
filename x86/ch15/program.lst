     1                                  ;用户程序
     2                                  
     3                                  ;--------用户程序头部段-----------------------------------------------------------------------
     4                                  section header vstart=0
     5 00000000 [00000000]                  program_length dd program_end       ;[0x00]程序总长度，双字，32位
     6 00000004 [28030000]                  head_len dd header_end              ;[0x04]头部段长度，也用于接收头部段选择子
     7 00000008 00000000                    stack_seg dd 0                      ;[0x08]用于接收用户栈段选择子，栈的创建由内核程序为何
     8 0000000C 01000000                    stack_len dd 1                      ;[0x0c]用户栈的长度，单位为4kb，由用户程序定义，内核会读取该值
     9 00000010 [00000000]                  code_entry dd start                 ;[0x10]代码段入口
    10 00000014 [00000000]                  code_seg dd section.code.start      ;[0x14]代码段偏移地址，也用于接收代码段选择子
    11 00000018 [36000000]                  code_len dd code_end                ;[0x18]代码段长度
    12 0000001C [00000000]                  data_seg dd section.data.start      ;[0x1c]数据段偏移地址
    13 00000020 [4C000000]                  data_len dd data_end                ;[0x20]数据段长度
    14                                  
    15                                      ;以下是符号地址检索表，也就是导出的内核函数库
    16 00000024 03000000                    salt_items dd (header_end-salt)/256 ;[0x24]导出函数数量，每个函数256字节     
    17                                  
    18                                      salt:   
    19 00000028 405072696E74537472-             PrintString dd '@PrintString'               ;[0x28]
    19 00000031 696E67             
    20 00000034 00<rep F4h>                         times 256-($-PrintString) db 0          ;每个函数长度为256字节，不足256的用0补充
    21 00000128 405465726D696E6174-              TerminateProgram db  '@TerminateProgram'   ;终止用户程序
    21 00000131 6550726F6772616D   
    22 00000139 00<rep EFh>                         times 256-($-TerminateProgram) db 0           
    23 00000228 40526561644469736B-              ReadDiskData     db  '@ReadDiskData'
    23 00000231 44617461           
    24 00000235 00<rep F3h>                         times 256-($-ReadDiskData) db 0
    25                                  
    26                                      header_end:
    27                                  
    28                                  ;--------数据段段-----------------------------------------------------------------------
    29                                  section data vstart=0
    30 00000000 0D0A                        message_1       db  0x0d,0x0a
    31 00000002 5B5573657220546173-                         db  '[User Task]: Hi! nice to meet you,'
    31 0000000B 6B5D3A20486921206E-
    31 00000014 69636520746F206D65-
    31 0000001D 657420796F752C     
    32 00000024 4920616D2072756E20-                         db  'I am run at CPL=',0
    32 0000002D 61742043504C3D00   
    33                                                      
    34 00000035 00                          message_2       db  0
    35 00000036 2E4E6F772C49206D75-                         db  '.Now,I must exit...',0x0d,0x0a,0
    35 0000003F 737420657869742E2E-
    35 00000048 2E0D0A00           
    36                                      data_end:
    37                                  [bits 32]
    38                                  ;--------代码段-----------------------------------------------------------------------
    39                                  section code vstart=0
    40                                      start:
    41                                          ;;任务启动时，DS指向头部段，也不需要设置堆栈
    42 00000000 8CD8                            mov eax,ds
    43 00000002 8EE0                            mov fs,eax          ;使fs段也指向头部段
    44                                  
    45 00000004 A1[1C000000]                    mov eax,[data_seg]
    46 00000009 8ED8                            mov ds,eax          ;设置用户数据段
    47                                  
    48 0000000B BB[00000000]                    mov ebx,message_1
    49 00000010 64FF1D[28000000]                call far [fs:PrintString]   ;调用内核通用代码库
    50                                  
    51 00000017 668CC8                          mov ax,cs
    52 0000001A 2403                            and al,0000_0011B
    53 0000001C 0C30                            or al,0x0030
    54 0000001E A2[35000000]                    mov [message_2],al          ;获取当前代码段的DPL并写入内存
    55                                  
    56 00000023 BB[35000000]                    mov ebx,message_2
    57 00000028 64FF1D[28000000]                call far [fs:PrintString]
    58                                  
    59 0000002F 64FF1D[28010000]                call far [fs:TerminateProgram]      ;退出，并将控制权返回到核心 
    60                                      code_end:
    61                                  
    62                                  ;--------尾部段-----------------------------------------------------------------------
    63                                  section trail align=16
    64                                      program_end:                    ;程序结尾标号，因为段没有定义vstart,所以该标号的偏移地址是从程序头开始的
